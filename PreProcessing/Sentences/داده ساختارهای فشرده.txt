در علوم کامپیوتر ،داده ساختار فشرده داده ساختاری است که از فضایی استفاده می‌کند که به نظریه اطلاعات کران پایین نزدیک است؛ ولی (برخلاف دیگر نمایش‌های فشرده) هنوز برای عملیات‌ها کارایی دارد. مفهوم این داده ساختار اولین بار توسط جاکوبسون معرفی شد. با مفهوم رمز گذاری آرایه بیتی، درخت (بدون برچسب) و گراف مسطح. برخلاف الگوریتم فشرده‌سازی بی‌اتلاف داده‌ها، به‌طور کلی داده ساختار فشرده، این ویژگی را دارد که می‌توان بدون ناهم فشرده کردن داده‌ها از آن‌ها استفاده کرد.
برای مثال، یک داده ساختار                         2         Z                 {\displaystyle 2Z}     بیت استفاده می‌کند برای ذخیرهٔ داده ساختار متراکم است،                         Z         +                                 Z                                     {\displaystyle Z+{\sqrt {Z}}}     یا                         Z         +         lg         &#x2061;         Z                 {\displaystyle Z+\lg Z}     بیت برای داده ساختار فشرده است و                         Z         +         3                 {\displaystyle Z+3}     بیت برای داده ساختار ضمنی است.
در درخت پیشوندی می‌توانیم در زمان دلخواه که با طول رشته مناسب است، جستجو کنیم، و در مورد آرایهٔ پیشوندی نیز، در این داده ساختار به نقطه‌ای که شاخص اش به آن اشاره دارد بر می‌گردد. این دو داده ساختار بسیار کاربردی هستند مخصوصاً زمانی که فقط با یک کاربر در ارتباط اند یا فقط در موتور جستجو استفاده می‌شود.
واضح است که برای هر گره درخت در حدود                         6         n         l         o         g         (         n         )                 {\displaystyle 6nlog(n)}     بیت حافظه نیاز است .(۱-پدر، ۲-گره راست، ۳-گره چپ، ۴-اندازه، ۵-مدیریت حافظه، ۶-مرجع)
به عنوان مثال درخت پیشوندی کامل در حدود ۵ یا ۶ برابر آرایهٔ پیشوندی فضا از حافظه را نیاز دارد. (به عنوان مثال فقط مراجع برگ‌ها را در نظر بگیرید)
عدد کاتالان = اوردر ریشهٔ جنگل یا درخت دودویی =                                                                                 (                                                                  2                   n                                  n                                               )                                                               /                      (           n           +           1           )                          {\displaystyle \textstyle {\binom {2n}{n}}/(n+1)}    
پس کران بالای آن در حدود                         2         n                 {\displaystyle 2n}     بیت است.
در این روش برای نمایش درخت از علامت پرانتر استفاده می‌کنیم. به این صورت عمل می‌کنیم که برای هر گره ")" قرار می‌دهیم سپس زیر درخت، در آخر "(". در عمل در این روش هر گره ۲ بیت فضا از حافظه را به خود اختصاص می‌دهد.
اگر به هرم مانند یک درخت دودویی نگاه کنیم، و سپس به هر گره آن (گره معادل عدد یک) و یک عدد اضافه کنیم (معادل عدد صفر) سپس شروع به خواندن سطر به سطر آن کنیم (مطابق شکل زیر):
در نتیجه، یه طور مثال برای هرمی مانند شکل زیر، برداری مانند "۱۱۱۱۰۱۱۱۰۰۱۰۰۰۰۰۰" خواهیم داشت، که طول آن برابر                         2         n         +         1                 {\displaystyle 2n+1}     خواهد بود و یعنی این مقدار بیت از حافظه را اشغال می‌کند.
به عبارت دیگر                                                 r             a             n             k                                   q                             (         x         )                 {\displaystyle \mathbf {rank} _{q}(x)}     تعداد عناصری که برابر                         q                 {\displaystyle q}     هستند و تا قبل از موقعیت                         x                 {\displaystyle x}     قرار دارند را، بازمی‌گرداند. در حال که                                                 s             e             l             e             c             t                                   q                             (         x         )                 {\displaystyle \mathbf {select} _{q}(x)}     موقعیت                         x                 {\displaystyle x}     امین رخ داد                         q                 {\displaystyle q}     را بازمی‌گرداند.
                        l         i         f         t         C         h         i         l         d         (         X         )         =         2         r         a         n         k         (         x         )                 {\displaystyle liftChild(X)=2rank(x)}    
                        r         i         g         h         t         C         h         i         l         d         (         X         )         =         2         r         a         n         k         (         x         )         +         1                 {\displaystyle rightChild(X)=2rank(x)+1}    
                        p         a         r         e         n         t         (         X         )         =         s         e         l         e         c         t         (         l         f         l         o         o         r         x                    /                  2         &#x230B;         )                 {\displaystyle parent(X)=select(lfloorx/2\rfloor )}    
لغت‌نامه نمایه ساز فشرده، رتبه لغت‌نامه نیز نامیده می‌شود . بر اساس تعدادی از تکنیک‌های نمایش فشرده، از جمله درخت دودویی، چندمجموعه و درخت پسوندی. مشکل اساسی ذخیره‌سازی زیر مجموعهٔ S از مجموعه جهانی (                        U         =         [         0         &#x2026;         n         )         =         {         0         ,         1         ,         &#x2026;         ,         n         &#x2212;         1         }                 {\displaystyle U=[0\dots n)=\{0,1,\dots ,n-1\}}    )، معمولاً با ارائه بیتی                         B         [         0         &#x2026;         n         )                 {\displaystyle B[0\dots n)}     که                         B         [         i         ]         =         1                 {\displaystyle B[i]=1}     اگر                         i         &#x2208;         S                 {\displaystyle i\in S}     نمایش داده می‌شوند. لغت‌نامه‌های نمایه ساز، تابع‌هایی را پشتیبانی می‌کند، مانند نمایش دادن، حذف و اضافه کردن در موارد پویا.
یک نمایش ساده وجود دارد که از                         n         +         o         (         n         )                 {\displaystyle n+o(n)}     بیت از فضای حافظه (                        n                 {\displaystyle n}     برای بیت اصلی آرایه و                         o         (         n         )                 {\displaystyle o(n)}     برای ساختار کمکی) استفاده می‌کند و در زمان ثابت،                                                 r             a             n             k                                   q                             (         x         )                 {\displaystyle \mathbf {rank} _{q}(x)}     و                                                 s             e             l             e             c             t                                   q                             (         x         )                 {\displaystyle \mathbf {select} _{q}(x)}     را پشتیبانی می‌کند. این از یک ایدهٔ مشابه که برای محدوده حداقل نمایش بوده‌است، استفاده می‌کند. این یک عدد ثابت از تابع بازگشتی است قبل از پایان زیر مسئله‌ای که اندازهٔ محدود دارد.
