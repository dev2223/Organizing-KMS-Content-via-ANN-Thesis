صف  لیستی است که عمل افزودن داده‌ها درون آن از انتهای لیست و عمل حذف داده‌ها از ابتدای لیست انجام می‌شودمثل یک صف نانوایی داده‌ها به ترتیب ورود پشت سر هم در صف قرار می‌گیرند. بنابراین اولین داده ورودی اولین داده خروجی نیز خواهد بود، این به این معنی است که شیوهٔ عمل‌کرد صف براساس سیاست FIFO است.
در این داده ساختار، دو عمل اصلی تعریف می‌شود، حذف کردن داده‌ها (Addqueue) واضافه کردن داده‌ها (Delqueue).برای پیاده‌سازی این توابع به دو اشاره گر نیازمندیم.یکی Front که همیشه به یک عنصر قبل از عنصر ابتدایی اشاره می‌کند ودیگری rear که همیشه به آخرین عنصر اشاره دارد. دامنه تغییرات front و rear از 0 تا n است و مقادیر اولیه آن‌ها 0 قرار داده می‌شود.شرط پر بودن صف: rear=n
مشابه پشته‌ها، صف‌ها نیز می‌توانند با انواع ساختارداده هایی مثل آرایه یا لیست پیوندی پیاده‌سازی شوند. باز هم، صرف‌نظر از این که از کدام ساختارداده استفاده می‌کنیم، پیاده‌سازی دو تابع Enqueue (صف افزایی، افزودن به ته صف) و Dequeue (صف گشایی، خروج از سر صف) ضرورت دارد.  اگر فرض کنیم که صف با آرایه پیاده‌سازی شده باشد، شبه‌کد تابع‌های Enqueue و Dequeue به این صورت خواهد بود:
ایدهٔ صف حلقوی از آنجا شکل می‌گیرد که اگر ما n عنصر را وارد صف کنیم و سپس آن‌ها را یکی یکی حذف کنیم شرط پر بودن صف بر قرار می‌ماند و این در حالی است که که صف هنوز جای خالی دارد.
در این حالت وقتی rear=n-1 عنصر بعدی در [0]queue قرار می‌گیرد.در صف حلقوی front=rear به معنای خالی بودن صف است ولی شرط پر بودن صف بدین طریق تغییر می‌یابد:
برای اضافه کردن به صف حلقوی rear یکی اضافه می‌شود و در صورتی‌که rear=n-1 باید صفر بشود.بدین منظورrear را با رابطه زیر در هر شرایطی مقدار دهی می‌کنند:
در صف عادی از تکنیک FIFO - مخفف First In First Out استفاده می‌شوداما در صف اولویتی برای هر داده اولویتی - نه لزوماً منحصر بفرد - مشخص می‌شود. صف اولویت را می‌توان به اورژانس یک بیمارستان تشبیه کرد که هر بیمار با شدت بیماری بیشتر اولویت بیشتری برای رسیدگی دارد. سیستم‌عامل کامپیوتر هم برای مدیریت پردازش‌ها از صفهای اولویت استفاده می‌کند.
صف انتظار CPU یک صف اولویت دار است. در نتیجه CPU در اولین فرصت ممکن ابتدا پردازش شماره 3 را انجام می‌دهد. سپس پردازش شماره 2 و . . .
تذکر: روش‌های زمان بندی CPU جهت انجام پردازش‌های مختلف یکی از بحث‌های جذاب و در عین حال مهم مبحث سیستم‌عامل است. بررسی تمامی روش‌های زمان بندی و مزایا و معایب آن‌ها خارج از بحث فعلی ماست.
پیچیدگی زمانی  افزودن عنصری به صف در پیاده‌سازی آرایه‌ای، با پیچیدگی زمانی خروج عنصری از صف تفاوت دارد. در مورد افزودن یک عنصر، از (O(n است که n نشان‌دهندهٔ تعداد عنصرهای موجود در صف است. علت این امر آن است که با ورود هر عنصر به ته صف، همهٔ عنصرهای دیگر باید به اندازهٔ یکی جابه‌جا شوند تا جا برای این عنصر تازه باز شود. این در حالی است که خروج یک عنصر از صف دارای پیچیدگی زمانی از (O(1 است.
می‌بینیم که در پیاده‌سازی آرایه‌ای، پیچیدگی زمانی افزودن و برداشتن عنصرها از صف و به صف، با هم متفاوت است. با این وجود اگر صف را با لیست‌های پیوندی پیاده‌سازی کنیم، به علت ساختار خاص این لیست‌ها، هردوی این اعمال برای هم صف (و به همین شکل برای پشته)، دارای پیچیدگی زمانی از (O(1 خواهد بود.
صف‌ها همچین می‌توانند به عنوان داده ساختار تابعی محض پیاده‌سازی شوند. دو نسخه از این پیاده‌سازی وجود دارد. اولی که در زیر توضیح داده شده‌است صف بلا درنگ نام دارد. این پیاده‌سازی این امکان را به صف‌ها می‌دهد که با پیچیدگی زمانی                         O         (         1         )                 {\displaystyle O(1)}    ماندگار باشند، اما به لیست‌های کندرو با مموایز کردن نیاز دارند. پیاده‌سازی دوم به لیست‌های کندرو و مموایز کردن نیاز ندارد و در انتهای این بخش توضیح داده شده‌است. پیچیدگی زمانی سرشکن پیاده‌سازی دوم اگر ماندگاری نباشد                         O         (         1         )                 {\displaystyle O(1)}     است، اما پیچیدگی بدترین حالتش                         O         (         n         )                 {\displaystyle O(n)}     است و                         n                 {\displaystyle n}    تعداد عناصر موجود در صف است.
فرض کنیم برای لیستی مانند                         l                 {\displaystyle l}    ،                                    |                  l                    |                          {\displaystyle |l|}    طول لیست،                         n         i         l                 {\displaystyle nil}    نشانگر لیست خالی و                         C         O         N         S         (         h         ,         t         )                 {\displaystyle CONS(h,t)}     نشانگر لیستی باشد که                         h         e         a         d                 {\displaystyle head}    آن                         h                 {\displaystyle h}    و                         t         a         i         l                 {\displaystyle tail}    آن                         t                 {\displaystyle t}    است.
داده ساختار استفاده شده برای پیاده‌سازی صف‌هایمان از سه لیست پیوندی                         (         f         ,         r         ,         s         )                 {\displaystyle (f,r,s)}    تشکیل شده‌است  که                         f                 {\displaystyle f}    جلوی صف،                         r                 {\displaystyle r}    عقب صف در ترتیب برعکس است. ثایت                         s                 {\displaystyle s}    نشانگر                         s                 {\displaystyle s}    عنصر عقب                         f                 {\displaystyle f}    بدون                                    |                  r                    |                          {\displaystyle |r|}    عنصر پشتی آن است،                                    |                  s                    |                  =                    |                  f                    |                  &#x2212;                    |                  r                    |                          {\displaystyle |s|=|f|-|r|}    .                         t         a         i         l                 {\displaystyle tail}    صف                         (         C         O         N         S         (         x         ,         f         )         ,         r         ,         s         )                 {\displaystyle (CONS(x,f),r,s)}    تقریباً                         (         f         ,         r         ,         s         )                 {\displaystyle (f,r,s)}    است و اضافه کردن عنصری مانند                         x                 {\displaystyle x}    به                         (         f         ,         r         ,         s         )                 {\displaystyle (f,r,s)}    تقریباً                         (         f         ,         C         O         N         S         (         x         ,         r         )         ,         s         )                 {\displaystyle (f,CONS(x,r),s)}    است. به این دلیل تقریبی می‌گوییم که در جفت نتیجه‌ها                                    |                  s                    |                  =                    |                  f                    |                  &#x2212;                    |                  r                    |                  +         1                 {\displaystyle |s|=|f|-|r|+1}    است.
تابع کمکی                         a         u         x                 {\displaystyle aux}    برای ثابت صدا زده شود تا در فرض مساله صدق کند و خللی به وجود نیاید. بسته به اینکه                         s                 {\displaystyle s}    لیست خالی باشد یا نه دو حالت باید در نظر گرفته شود که اگر خالی باشد:                                    |                  r                    |                  =                    |                  f                    |                  +         1                 {\displaystyle |r|=|f|+1}    . تعریف رسمی این گونه است                         a         u         x         (         f         ,         r         ,         C         o         n         s                    (                        ,                             s         )         )         =         (         f         ,         r         ,         s         )                 {\displaystyle aux(f,r,Cons(_{,}s))=(f,r,s)}    و                         a         u         x         (         f         ,         r         ,         n         i         l         )         =         (                                                f               &#x00B4;                                          ,         n         i         l         ,                                                f               &#x00B4;                                          )                 {\displaystyle aux(f,r,nil)=({\acute {f}},nil,{\acute {f}})}    که                                    f           &#x2032;                          {\displaystyle f'}                            f                 {\displaystyle f}    ای است که توسط عکس                         r                 {\displaystyle r}     دنبال شده‌است.
تابع                         r         e         v         e         r         s         e         (         f         ,         r         )                 {\displaystyle reverse(f,r)}     که خروجی آن                         f                 {\displaystyle f}    ای دنبال شده توسط برعکس                         r                 {\displaystyle r}    است را صدا می‌کنیم. علاوه بر آن فرض می‌کنیم                                    |                  r                    |                  =                    |                  f                    |                  +         1                 {\displaystyle |r|=|f|+1}    ، چون در حالتی است که این تابع صدا زده شده‌است. به‌طور جزئی‌تر، ما تابع کندرو                         r         o         t         a         t         e         (         f         ,         r         ,         a         )                 {\displaystyle rotate(f,r,a)}    را تعریف می‌کنیم که سه لیست ورودی می‌گیرد که                                    |                  r                    |                  =                    |                  f                    |                  +         1                 {\displaystyle |r|=|f|+1}     است و خروجی آن الحاق                         f                 {\displaystyle f}    ، برعکس                         r                 {\displaystyle r}    و                         a                 {\displaystyle a}    است. آنگاه                         r         e         v         e         r         s         e         (         f         ,         r         )         =         r         o         t         a         t         e         (         f         ,         r         ,         n         i         l         l         )                 {\displaystyle reverse(f,r)=rotate(f,r,nill)}    . تعریف اسقرایی تابع چرخش این چنین است که                         r         o         t         a         t         e         (         n         i         l         ,         C         o         n         s         (         y         ,         n         i         l         )         ,         a         )         =         C         o         n         s         (         y         ,         a         )                 {\displaystyle rotate(nil,Cons(y,nil),a)=Cons(y,a)}    و                         r         o         t         a         t         e         (         C         o         n         s         (         x         ,         f         )         ,         C         o         n         s         (         y         ,         r         )         ,         a         )         =         C         o         n         s         (         x         ,         r         o         t         a         t         e         ,         r         o         t         a         t         e         (         f         ,         r         ,         C         o         n         s         (         y         ,         a         )         )         )                 {\displaystyle rotate(Cons(x,f),Cons(y,r),a)=Cons(x,rotate,rotate(f,r,Cons(y,a)))}    . پیچیدگی زمانی آن                         O         (         r         )                 {\displaystyle O(r)}    است اما چون از ارزیابی کندرو استفاده شده‌است تا زمانی که نتیجه محاسبات ضروری نباشد محاسبات به تعویق می‌افتد.
بدون بخش کندروی محاسباتِ پیاده‌سازی، صف بلا درنگ پیاده‌سازی غیرماندگاری از صف در پیچیدگی زمانی سرشکن                         O         (         1         )                 {\displaystyle O(1)}     خواهد بود. در این حالت، لیست                         s                 {\displaystyle s}     می‌تواند با عدد صحیح                                    |                  f                    |                  &#x2212;                    |                  r                    |                          {\displaystyle |f|-|r|}     جایگزین شود و تابع reverse زمانی صدا زده می‌شود که                         s                 {\displaystyle s}    صفر باشد.
از صف‌ها در کاربری‌هایی که در آن‌ها، اشیاء، پدیده‌ها و روی‌دادها در انتظارند تا پردازش شوند، بیش‌تر استفاده می‌شود. مدیریت پیام‌ها در سیستم‌عاملی مثل ویندوز، مدیریت فهرست کارهایی که باید به ترتیب انجام شوند، پیاده‌سازی الگوریتم جستجوی سطح اول و... از جمله مواردی است که در آن‌ها از صف‌ها استفاده می‌شود.
از ترکیب صف و پشته، داده‌ساختار جدیدی هم ایجاد شده‌است که هم امکان افزودن عنصرها را از دوسوی تودهٔ داده‌ها می‌دهد و هم امکان برداشتن آن‌ها را.
